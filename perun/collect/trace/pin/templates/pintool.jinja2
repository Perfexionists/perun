#include <iostream>
#include <fstream>
#include <string>
#include <sstream>
#include "pin.H"

using std::cerr;
using std::endl;
using std::string;
using std::ofstream;

PIN_MUTEX outFileLock;
std::ofstream outFile;

enum Granularity { G_RTN, G_BBL };
enum Location { L_BEFORE, L_AFTER };

KNOB<string> KnobOutputFile(KNOB_MODE_OVERWRITE, "pintool", "o", "raw_collection_data.txt", "Specify output file name.");

{%- if collect_arguments %}
#define FUNC_CNT {{ function_table_len }}
string function_names[FUNC_CNT] { {{ func_names }} };
{%- endif %}

typedef struct RoutineInfo {
    UINT32 id;
    string name;

    // Location of the routine
    INT32 sourceCodeLine;
    string sourceCodeFile;
} RoutineInfo;

typedef struct BasicBlockInfo {
    // Address of the first instruction in the block
    ADDRINT id;

    // The parent routine information
    string routineName;
    UINT32 routineId;
    ADDRINT routineAddress;

    // Location of the basic block
    INT32 sourceCodeLineStart;
    INT32 sourceCodeLineEnd;
    string sourceCodeFile;
} BasicBlockInfo;

// Function is called when the application exits and cleans up the used resources.
VOID Fini(INT32 code, VOID* v){
    outFile.close();
    PIN_MutexFini(&outFileLock);
}

{% include 'analysis.jinja2' %}

{% include 'instrumentation.jinja2' %}

{% include 'main.jinja2' %}